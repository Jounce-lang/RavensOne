// Input Component
// Form input with validation and various types

export enum InputType {
    Text,
    Email,
    Password,
    Number,
    Tel,
    Url,
    Search
}

export type InputProps = {
    type: InputType,
    value: String,
    placeholder: String,
    label: String,
    error: String,
    disabled: Bool,
    required: Bool,
    oninput: (String) -> Void
}

export component Input(props: InputProps) {
    let inputType = match props.type {
        InputType::Text => "text",
        InputType::Email => "email",
        InputType::Password => "password",
        InputType::Number => "number",
        InputType::Tel => "tel",
        InputType::Url => "url",
        InputType::Search => "search"
    };

    let hasError = props.error && props.error.length > 0;

    <div class="input-wrapper">
        {if props.label {
            <label class="input-label">
                {props.label}
                {if props.required {
                    <span class="input-required">*</span>
                }}
            </label>
        }}

        <input
            type={inputType}
            value={props.value}
            placeholder={props.placeholder || ""}
            class={hasError ? "input input-error" : "input"}
            disabled={props.disabled}
            oninput={(e) => props.oninput(e.target.value)}
        />

        {if hasError {
            <span class="input-error-message">{props.error}</span>
        }}
    </div>

    <style>
        .input-wrapper {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            width: 100%;
        }

        .input-label {
            font-size: 0.875rem;
            font-weight: 500;
            color: #374151;
        }

        .input-required {
            color: #ef4444;
            margin-left: 0.25rem;
        }

        .input {
            padding: 0.5rem 0.75rem;
            border: 1px solid #d1d5db;
            border-radius: 0.375rem;
            font-size: 1rem;
            font-family: inherit;
            transition: all 0.2s ease;
            width: 100%;
        }

        .input:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
        }

        .input:disabled {
            background: #f3f4f6;
            cursor: not-allowed;
            opacity: 0.6;
        }

        .input-error {
            border-color: #ef4444;
        }

        .input-error:focus {
            border-color: #ef4444;
            box-shadow: 0 0 0 3px rgba(239, 68, 68, 0.1);
        }

        .input-error-message {
            font-size: 0.875rem;
            color: #ef4444;
        }
    </style>
}
