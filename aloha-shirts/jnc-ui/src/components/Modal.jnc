// Modal Component
// A dialog/overlay component for displaying content on top of the page

export type ModalProps = {
    isOpen: Bool,
    title: String,
    onClose: () -> Void,
    closeOnOverlay: Bool,
    size: String, // "small" | "medium" | "large" | "full"
    children: Any
}

export component Modal(props: ModalProps) {
    let size = props.size || "medium";
    let closeOnOverlay = props.closeOnOverlay !== false; // Default true

    let handleOverlayClick = () => {
        if closeOnOverlay && props.onClose {
            props.onClose();
        }
    };

    let handleContentClick = (e) => {
        e.stopPropagation();
    };

    let sizeClass = match size {
        "small" => "modal-small",
        "medium" => "modal-medium",
        "large" => "modal-large",
        "full" => "modal-full",
        _ => "modal-medium"
    };

    {if props.isOpen {
        <div class="modal-overlay" onclick={handleOverlayClick}>
            <div class={`modal-content ${sizeClass}`} onclick={handleContentClick}>
                <div class="modal-header">
                    <h2 class="modal-title">{props.title}</h2>
                    <button class="modal-close" onclick={props.onClose} aria-label="Close modal">
                        Ã—
                    </button>
                </div>

                <div class="modal-body">
                    {props.children}
                </div>
            </div>
        </div>
    }}

    <style>
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(0, 0, 0, 0.5);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            animation: fadeIn 0.2s ease;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        .modal-content {
            background: white;
            border-radius: 0.5rem;
            box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
            max-height: 90vh;
            overflow-y: auto;
            animation: slideUp 0.3s ease;
        }

        @keyframes slideUp {
            from {
                transform: translateY(20px);
                opacity: 0;
            }
            to {
                transform: translateY(0);
                opacity: 1;
            }
        }

        .modal-small {
            width: 90%;
            max-width: 400px;
        }

        .modal-medium {
            width: 90%;
            max-width: 600px;
        }

        .modal-large {
            width: 90%;
            max-width: 900px;
        }

        .modal-full {
            width: 95%;
            max-width: 1200px;
            max-height: 95vh;
        }

        .modal-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 1.5rem;
            border-bottom: 1px solid #e5e7eb;
        }

        .modal-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #111827;
            margin: 0;
        }

        .modal-close {
            background: none;
            border: none;
            font-size: 2rem;
            line-height: 1;
            color: #6b7280;
            cursor: pointer;
            padding: 0;
            width: 2rem;
            height: 2rem;
            display: flex;
            align-items: center;
            justify-content: center;
            border-radius: 0.25rem;
            transition: all 0.2s ease;
        }

        .modal-close:hover {
            background: #f3f4f6;
            color: #111827;
        }

        .modal-body {
            padding: 1.5rem;
        }
    </style>
}
